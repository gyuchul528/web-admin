<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= category.name %> - ページ一覧</title>
    <!-- Bootstrap 5.3.0 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f5f5f5;
            padding: 0;
            margin: 0;
        }
        
        .container-fluid {
            padding: 1.5rem;
        }

        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #1696d7;
            border-bottom: none;
            color: white;
        }

        .table > :not(caption) > * > * {
            padding: 0.75rem;
        }

        .status-published {
            color: #198754;
        }

        .status-draft {
            color: #6c757d;
        }

        .order-input {
            width: 80px !important;
        }

        .action-buttons a {
            text-decoration: none;
            margin-right: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0"><%= category.name %> - ページ一覧</h1>
                <div class="d-flex gap-2">
                    <button class="btn btn-light" onclick="location.href='/admin/pages/<%= category.id %>/add'">
                        新規ページ追加
                    </button>
                    <button class="btn btn-outline-light" onclick="updateOrder()">
                        表示順序を更新
                    </button>
                </div>
            </div>
            
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 80px;">ID</th>
                                <th>タイトル</th>
                                <th style="width: 100px;">順序</th>
                                <th style="width: 100px;">状態</th>
                                <th style="width: 160px;">作成日</th>
                                <th style="width: 160px;">更新日</th>
                                <th style="width: 160px;">操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (pages && pages.length > 0) { %>
                                <% pages.forEach(function(page) { %>
                                    <tr>
                                        <td><%= page.id %></td>
                                        <td><%= page.title %></td>
                                        <td>
                                            <input type="number" 
                                                   class="form-control form-control-sm order-input" 
                                                   value="<%= page.sort_order %>" 
                                                   data-id="<%= page.id %>">
                                        </td>
                                        <td>
                                            <span class="badge <%= page.status ? 'bg-success' : 'bg-secondary' %>">
                                                <%= page.status ? '公開' : '非公開' %>
                                            </span>
                                        </td>
                                        <td><%= page.formatted_created_at %></td>
                                        <td><%= page.formatted_updated_at %></td>
                                        <td class="action-buttons">
                                            <a href="/admin/pages/edit/<%= page.id %>" 
                                               class="btn btn-sm btn-outline-primary">編集</a>
                                            <button onclick="deletePage('<%= page.id %>')" 
                                                    class="btn btn-sm btn-outline-danger">削除</button>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="7" class="text-center">ページがありません</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // ページ削除
        function deletePage(id) {
            if (!confirm('このページを削除してもよろしいですか？')) return;

            fetch(`/admin/pages/delete/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showToast('ページを削除しました');
                    location.reload();
                } else {
                    showToast(result.message || '削除に失敗しました', true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('削除に失敗しました', true);
            });
        }

        // 表示順序の更新
        function updateOrder() {
            const orders = {};
            document.querySelectorAll('.order-input').forEach(input => {
                orders[input.dataset.id] = input.value;
            });

            fetch('/admin/pages/updateOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(orders)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showToast('表示順序を更新しました');
                    location.reload();
                } else {
                    showToast(result.message || '更新に失敗しました', true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('更新に失敗しました', true);
            });
        }

        // トースト通知を表示する関数
        function showToast(message, isError = false) {
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
            
            const toastHtml = `
                <div class="toast align-items-center text-white ${isError ? 'bg-danger' : 'bg-success'}" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            toastContainer.innerHTML = toastHtml;
            document.body.appendChild(toastContainer);
            
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
            
            setTimeout(() => {
                document.body.removeChild(toastContainer);
            }, 5000);
        }
    </script>
</body>
</html> 