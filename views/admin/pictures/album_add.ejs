<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>新規アルバム作成</title>
    <!-- Bootstrap 5.3.0 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f5f5f5;
            padding: 0;
            margin: 0;
        }
        
        .container-fluid {
            padding: 1.5rem;
        }

        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #1696d7;
            border-bottom: none;
            color: white;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">新規アルバム作成</h1>
                <a href="/admin/pictures/<%= category.id %>/list" 
                   class="btn btn-light">アルバム一覧に戻る</a>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <form id="albumForm" class="needs-validation" novalidate>
                            <div class="mb-3">
                                <label class="form-label">アルバム名 <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" name="name" required>
                                <div class="invalid-feedback">
                                    アルバム名を入力してください。
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">説明</label>
                                <textarea class="form-control" name="description" rows="3"></textarea>
                            </div>
                            
                            <% if (subcategories && subcategories.length > 0) { %>
                            <div class="mb-3">
                                <label class="form-label">サブカテゴリー</label>
                                <select class="form-select" name="subcategory_id">
                                    <option value="">選択してください</option>
                                    <% subcategories.forEach(function(subcategory) { %>
                                        <option value="<%= subcategory.id %>"><%= subcategory.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <% } %>
                            
                            <div class="mb-3">
                                <label class="form-label">公開設定</label>
                                <select class="form-select" name="privacy_level">
                                    <option value="0">公開</option>
                                    <option value="1">限定公開</option>
                                    <option value="2">非公開</option>
                                </select>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">表示順</label>
                                <input type="number" class="form-control" name="sort_order" value="0" min="0">
                            </div>
                            
                            <div class="d-flex gap-2 justify-content-end">
                                <button type="submit" class="btn btn-primary">保存</button>
                            </div>
                        </form>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header bg-light text-dark">
                                ヘルプ
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">アルバムについて</h5>
                                <p class="card-text">アルバムは写真をグループ化するためのコンテナです。</p>
                                <ul class="list-unstyled">
                                    <li class="mb-2"><strong>アルバム名：</strong> 必須項目です。わかりやすい名前を付けてください。</li>
                                    <li class="mb-2"><strong>説明：</strong> アルバムの内容や目的を説明する文章を入力できます。</li>
                                    <li class="mb-2"><strong>公開設定：</strong> アルバムの公開レベルを設定します。</li>
                                    <li class="mb-2"><strong>表示順：</strong> 数字が小さいほど先頭に表示されます。</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // トースト通知を表示する関数
        function showToast(message, isError = false) {
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
            
            const toastHtml = `
                <div class="toast align-items-center text-white ${isError ? 'bg-danger' : 'bg-success'}" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            toastContainer.innerHTML = toastHtml;
            document.body.appendChild(toastContainer);
            
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
            
            setTimeout(() => {
                document.body.removeChild(toastContainer);
            }, 5000);
        }

        // フォーム送信処理
        document.getElementById('albumForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!this.checkValidity()) {
                e.stopPropagation();
                this.classList.add('was-validated');
                return;
            }
            
            const formData = new FormData(this);
            const albumData = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/admin/pictures/<%= category.id %>/album/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(albumData)
                });
                
                const result = await response.json();
                if (result.success) {
                    showToast('アルバムを作成しました');
                    setTimeout(() => {
                        window.location.href = `/admin/pictures/<%= category.id %>/list`;
                    }, 1000);
                } else {
                    showToast(result.message || 'アルバムの作成に失敗しました', true);
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('アルバム作成中にエラーが発生しました', true);
            }
        });
    </script>
</body>
</html> 