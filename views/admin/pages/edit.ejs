<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= page.category_name %> - ページ編集</title>
    <!-- Quill.js CDN -->
    <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: inline-block;
            width: 100px;
            margin-right: 10px;
        }
        .form-group input[type="text"] {
            width: 500px;
            padding: 5px;
        }
        .form-group input[type="number"] {
            width: 100px;
            padding: 5px;
        }
        .buttons {
            margin-top: 20px;
        }
        .buttons button {
            padding: 5px 15px;
            margin-right: 10px;
        }
        /* Quill.js用のスタイル */
        #editor {
            height: 400px;
        }
        .ql-editor {
            min-height: 350px;
        }
    </style>
</head>
<body>
    <h1><%= page.category_name %> - ページ編集</h1>

    <form id="pageForm">
        <div class="form-group">
            <label>タイトル：</label>
            <input type="text" name="title" value="<%= page.title %>" required>
        </div>
        <div class="form-group">
            <label>内容：</label>
            <div id="editor"></div>
            <input type="hidden" name="content">
        </div>
        <div class="form-group">
            <label>表示順：</label>
            <input type="number" name="sort_order" value="<%= page.sort_order %>" min="0">
        </div>
        <div class="form-group">
            <label>状態：</label>
            <select name="status">
                <option value="1" <%= page.status == 1 ? 'selected' : '' %>>表示</option>
                <option value="0" <%= page.status == 0 ? 'selected' : '' %>>非表示</option>
            </select>
        </div>
        <div class="buttons">
            <button type="submit">保存</button>
            <button type="button" onclick="history.back()">キャンセル</button>
        </div>
    </form>

    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
    <script>
        // Quill.jsの初期化
        const quill = new Quill('#editor', {
            theme: 'snow',
            modules: {
                toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'header': 1 }, { 'header': 2 }],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    [{ 'script': 'sub'}, { 'script': 'super' }],
                    [{ 'indent': '-1'}, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['clean'],
                    ['link', 'image', 'video']
                ]
            }
        });
        
        // 既存コンテンツをQuillエディタに設定
        quill.root.innerHTML = `<%- page.content %>`;

        // 画像アップロード機能の設定 (オプション)
        const toolbar = quill.getModule('toolbar');
        toolbar.addHandler('image', function() {
            const input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');
            input.click();
            
            input.onchange = async () => {
                const file = input.files[0];
                if (file) {
                    const formData = new FormData();
                    formData.append('image', file);
                    
                    try {
                        const response = await fetch('/admin/upload-image', {
                            method: 'POST',
                            body: formData
                        });
                        const result = await response.json();
                        if (result.success && result.url) {
                            const range = quill.getSelection();
                            quill.insertEmbed(range.index, 'image', result.url);
                        } else {
                            alert('画像のアップロードに失敗しました');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('画像のアップロードに失敗しました');
                    }
                }
            };
        });

        // フォーム送信処理
        document.getElementById('pageForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Quillエディタの内容を取得
            const content = quill.root.innerHTML;
            
            // フォームデータの作成
            const formData = new FormData(this);
            formData.set('content', content);
            
            // フォームデータをオブジェクトに変換
            const formDataObj = {};
            formData.forEach((value, key) => {
                formDataObj[key] = value;
            });
            
            console.log('Sending data:', formDataObj); // デバッグ用ログ
            
            // APIリクエスト
            fetch('/admin/pages/edit/<%= page.id %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formDataObj)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message || 'ページが正常に更新されました');
                    window.location.href = '/admin/pages/<%= page.category_id %>/list';
                } else {
                    alert(data.message || 'エラーが発生しました');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('エラーが発生しました');
            });
        });
    </script>
</body>
</html> 